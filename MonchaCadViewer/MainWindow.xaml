<Controls:MetroWindow x:Class="CadProjectorViewer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:CadProjectorViewer="clr-namespace:CadProjectorViewer"
    xmlns:convert="clr-namespace:CadProjectorViewer.Converters"
    xmlns:panels="clr-namespace:CadProjectorViewer.Panels"
    xmlns:canvaspanel="clr-namespace:CadProjectorViewer.Panels.CanvasPanel"
    xmlns:leftpanels="clr-namespace:CadProjectorViewer.Panels.DevicePanel.LeftPanels"
    xmlns:rightpanel="clr-namespace:CadProjectorViewer.Panels.RightPanel"
    xmlns:configuration="clr-namespace:CadProjectorViewer.Panels.RightPanel.Configuration"
    xmlns:Properties="clr-namespace:CadProjectorViewer.Properties"
    xmlns:device="clr-namespace:CadProjectorSDK.Device;assembly=CadProjectorSDK" 
    xmlns:devices="clr-namespace:CadProjectorViewer.ViewModel.Devices" 
    xmlns:modeles="clr-namespace:CadProjectorViewer.Modeles" 
    xmlns:viewmodel="clr-namespace:CadProjectorViewer.ViewModel"
    d:DataContext="{d:DesignInstance Type=modeles:AppMainModel}"
    x:Name="MainWin"
    mc:Ignorable="d"
    Title="CUT - Viwer" 
    KeyboardNavigation.TabNavigation="None"
    AllowDrop="True"
    Height="700" Width="999"
    WindowStartupLocation="CenterScreen"
    Icon="logo.png"
    ResizeMode="CanResizeWithGrip"
    ShowInTaskbar ="True">
    <Controls:MetroWindow.InputBindings>
        <KeyBinding
            Modifiers="Ctrl" Key="V"
            Command="{Binding PasteCommand}" />
        <KeyBinding
            Key="Delete"
            Command="{Binding DeleteCommand}" />
    </Controls:MetroWindow.InputBindings>
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="Border" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="DarkGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="CadetBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="GridSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="White" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="CadetBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ObjCanvas" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="DarkGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="CadetBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="Controls:HeaderedControlHelper.HeaderFontSize" Value="14" />
            </Style>

            <CadProjectorViewer:PlayBackConverter x:Key="PlayBackConverter" />
            <convert:BoolVisibleConverter x:Key="BoolVisibleConverter"/>
            <CadProjectorViewer:MultiObjectList x:Key="MultiList" />
            <CadProjectorViewer:LicenceColor x:Key="LicenceKey" />
            <CadProjectorViewer:GetHubPageConverter x:Key="GetHubPage" />
            <CadProjectorViewer:GetKompasPageConverter x:Key="GetKompasPage" />
            <HierarchicalDataTemplate 
                x:Key="DeviceTree" 
                DataType ="{x:Type device:LProjector}">
                <devices:DeviceItem/>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Menu>
                <MenuItem Header="▼" Focusable="True">
                    <MenuItem Header="{DynamicResource common_File}">
                        <MenuItem 
                            Header="New Workplace"
                            Click="NewWorkSpaceItem_Click" />
                        <MenuItem
                            Header="Open Workplace"
                            Click="OpenWorkSpaceItem_Click" />
                        <Separator />
                        <MenuItem
                            Header="{DynamicResource m_Save}"
                            Command="{Binding Path=SaveCommand}" />
                        <MenuItem
                            Header="{DynamicResource m_SaveConfigAs}"
                            Command="{Binding SaveAsCommand}" />
                        <Separator/>
                        <MenuItem
                            Header="Save Scene"
                            Command="{Binding SaveSceneCommand}"/>
                        <MenuItem 
                            Header="Open Scene" 
                            Command="{Binding OpenSceneCommand}"/>
                        <Separator/>
                        <MenuItem
                            Header="License"
                            Command="{Binding ShowLicenceCommand}" />
                        <Separator />
                        <MenuItem Header="{DynamicResource common_Close}" 
                                  Command="{Binding ElementName=MainWin, Path=ClosedCommand}" />
                    </MenuItem>
                    <MenuItem Header="Services">
                        <MenuItem
                                Command="{Binding RemoveOtherAppCommand}"
                                Header="Remove other process" />
                    </MenuItem>
                    <MenuItem x:Name="menuLanguage" Header="Language">
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Button 
                x:Name="MenuSaveBtn" 
                FontFamily="Segoe MDL2 Assets"
                Content="&#xE792;"
                Width="25" Height="25" 
                Margin="2" Padding="0,-1,0,0" FontSize="18" 
                BorderBrush="{x:Null}" Background="{x:Null}" Command="{Binding SaveCommand}" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Label Margin="3" Content="{Binding cl_moncha_path}" 
                   VerticalAlignment="Top" Grid.ColumnSpan="3" 
                   HorizontalContentAlignment="Right" 
                   FontSize="10">
                <Label.DataContext>
                    <Properties:Settings />
                </Label.DataContext>
            </Label>
            <Ellipse
                Height="15"
                Width="15"
                Fill="{Binding LockKey.IsLicensed, Converter={StaticResource LicenceKey}}"
                ToolTip="{Binding StringFormat= Licensed: {0},
                Path=ProjectorHub.LockKey.IsLicensed}"
                Margin="5,0">
            </Ellipse>

            <Controls:ToggleSwitch IsOn="{Binding UDPLaserListener.Status, Mode=OneWay}"
                                   OffContent="Ethernet"
                                   OnContent="Listing"
                                   VerticalAlignment="Center"
                                   Command="{Binding UDPToggleCommand}"
                                   MinWidth="0"
                                   Margin="3,0,3,0" />
            <Button Content="&#xE703;"
                    FontFamily="Segoe MDL2 Assets"
                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                    Command="{Binding ShowTCPDialogCommand}"/>
            <Button Content="T"
                    Command="{Binding ElementName=MainWin, Path=HideToTray}" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Border>
        <Border.Resources>
            <convert:NotNullBool x:Key="NotNullBool" />
            <viewmodel:ConvertModelToDeviceManagment x:Key="ModelToDeviceManagment" />
            
        </Border.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MinWidth="150" MaxWidth="300" />
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="3*" MinWidth="250" MaxWidth="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="113" />
                <RowDefinition Height="451*" />
                <RowDefinition Height="135*" MinHeight="150" MaxHeight="300"/>
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <GridSplitter
                Style="{StaticResource GridSplitter}"
                Width="3"
                Margin="0,3"
                Grid.Row="1" Grid.RowSpan="2"
                HorizontalAlignment="Right" />

            <DockPanel Margin="5" 
                       Grid.Row="0" 
                       LastChildFill="True">
                <DockPanel DockPanel.Dock="Right" 
                           Margin="0,0,0,0" 
                           MinWidth="80">
                    <Button DockPanel.Dock="Top" 
                            Content="{DynamicResource edit_Clear}"
                            Command="{Binding Path=Clear}"
                            HorizontalAlignment="Stretch" />
                    <Button DockPanel.Dock="Top"
                            x:Name="Line"
                            Content="{DynamicResource edit_Line}"
                            Command="{Binding Path=LineCommand}" />
                    <Button DockPanel.Dock="Top"
                            x:Name="RectBtn"
                            Content="{DynamicResource edit_Mask}"
                            Command="{Binding Path=MaskCommand}" />
                </DockPanel>
                <Button DockPanel.Dock="Left"
                        Content="{DynamicResource m_Open}"
                        Command="{Binding OpenCommand}"
                        MinWidth="99"
                        VerticalAlignment="Stretch" />
            </DockPanel>

            <TabControl x:Name="tabControl1"
                        Margin="0,0,0,0"

                        Grid.Column="1" Grid.Row="0">
                <TabItem Header="{DynamicResource obj_Transform}" FontSize="12">
                    <panels:CadObjectPanel DataContext="{Binding Scenes.SelectedScene.SelectedObjects.LastSelectObject}"
                        IsEnabled="{Binding DataContext, Converter={StaticResource NotNullBool}, RelativeSource={RelativeSource Self}}" />
                </TabItem>
            </TabControl>
            <Button x:Name="PlayBtn" Content="{DynamicResource m_Play}"
                    Margin="5,20,5,0"
                    Command="{Binding Path=PlayCommand}"
                    Background="{Binding Scenes.SelectedScene.Play, Converter={StaticResource PlayBackConverter}}"
                    Grid.Column="2"
                    Grid.Row="0" />

            <TabControl
                TabStripPlacement="Left"
                Grid.Row="1" Grid.RowSpan="2"
                Margin="3,0">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Padding" Value="2" />
                    </Style>
                </TabControl.Resources>
                <TabItem Header="{DynamicResource scene_Scene}">
                    <Border  Style="{StaticResource Border}">
                        <leftpanels:FrameTree 
                            DataContext="{Binding Scenes.SelectedScene}" />
                    </Border>
                </TabItem>
                <TabItem 
                    Visibility="{Binding AdminMode, Converter={StaticResource BoolVisibleConverter}}"
                    Header="{DynamicResource dvc_Devices}">
                    <Border Style="{StaticResource Border}">
                        <panels:DeviceTreeTab DataContext="{Binding ., Converter={StaticResource ModelToDeviceManagment}}"
                                              Focusable="False" 
                                              Margin="0" 
                                              Grid.ColumnSpan="2" Grid.Row="2" />
                    </Border>
                </TabItem>
            </TabControl>
            <Border Grid.Column="1" Grid.Row="1" Style="{StaticResource Border}" Margin="0,3,0,0">
                <canvaspanel:CanvasCollection 
                    DataContext="{Binding Scenes}" />
            </Border>

            <panels:ScrollPanel x:Name="ContourScrollPanel" Margin="0,5,0,0" Grid.Column="1" Grid.Row="2" />

            <TabControl DockPanel.Dock="Right" Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Margin="5,3,5,0">
                <TabItem Header="{DynamicResource scene_Scene}" FontSize="12">
                    <TabControl>
                        <TabItem Header="{DynamicResource dvc_Device}">
                            <panels:DeviceTab DataContext="{Binding Scenes.SelectedScene}"/>
                        </TabItem>
                        <TabItem Header="{DynamicResource setting_setting}">
                            <configuration:SceneSetting DataContext="{Binding Scenes.SelectedScene}"/>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="{DynamicResource common_Source}" FontSize="18">
                    <Grid Background="#FFE5E5E5">
                        <TabControl x:Name="TabItem">
                            <TabItem Header="Компас" FontSize="14">
                                <Frame Content="{Binding .,
                                    Converter={StaticResource GetKompasPage}}"/>
                            </TabItem>
                            <TabItem Header="ILDA" FontSize="14">
                                <Grid Background="#FFE5E5E5">
                                    <Controls:ToggleSwitch x:Name="UsedMeshToggle" Margin="10,10,0,0" IsOn="True" Content="Used device mesh" VerticalAlignment="Top" />
                                    <Button x:Name="ILDASaveBtn" Content="{DynamicResource m_Save}" HorizontalAlignment="Left" Margin="10,40,0,0" VerticalAlignment="Top" Width="248" Height="29" Click="ILDASaveBtn_Click" />
                                </Grid>
                            </TabItem>
                            <TabItem Header="Ethernet">
                                <Frame Content="{Binding .,
                                    Converter={StaticResource GetHubPage}}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem 
                    Visibility="{Binding AdminMode, Converter={StaticResource BoolVisibleConverter}}"
                    Header="{DynamicResource common_Configuration}">
                    <TabControl>
                        <TabItem Header="Setting" FontSize="14">
                            <configuration:AppDefaultSettingPanel />
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="{DynamicResource common_Workfolder}">
                    <rightpanel:WorkFolderPanel DataContext="{Binding WorkFolder}" />
                </TabItem>
                <TabItem Header="Log" FontSize="12">
                    <rightpanel:LogPanel DataContext="{Binding Logs}" />
                </TabItem>
            </TabControl>

            <panels:ProgressPanel 
                
                Grid.Column="0" 
                Grid.ColumnSpan="3" 
                Margin="5" Grid.Row="3" MouseDown="ProgressPanel_MouseDown" />
            <Label 
                x:Name="pBarLabel" 
                Visibility="Hidden" 
                Content="Label"
                Grid.Row="1" Grid.Column="2" 
                HorizontalContentAlignment="Center"
                VerticalAlignment="Center" 
                HorizontalAlignment="Center" 
                Height="26" 
                Width="38" />
            <GridSplitter
                 Style="{StaticResource GridSplitter}"
                Grid.Row="1" Grid.RowSpan="2"
                Grid.Column="2" HorizontalAlignment="Left"
                Width="3"
                Margin="0,3" />
            <GridSplitter Style="{StaticResource GridSplitter}"
                          Height="3"
                          Grid.Column="1"
                          HorizontalAlignment="Stretch"
                          Grid.Row="2" VerticalAlignment="Top" />

            <tb:TaskbarIcon
                ToolTipText="2CUT"
                Grid.Row="3"
                x:Name ="ttip"
                IconSource="logo.ico"
                DoubleClickCommand="{Binding ElementName=MainWin, Path=ShowFromTray}"
                LeftClickCommand="{Binding ElementName=CanvasCollection, Path=RefreshFrameCommand}">
                <!--
    We can use arbitrary UI elements as Popups.
    Popups stay open if the user moves away from the tray area
  -->
                <tb:TaskbarIcon.TrayPopup>
                    <Border
                        Background="White"
                        BorderBrush="Orange"
                        BorderThickness="2"
                        CornerRadius="1">
                        <StackPanel>
                            <Button 
                                Visibility="Collapsed"
                                Content="{DynamicResource m_Play}"
                                Command="{Binding Path=PlayAllCommand}"
                                Background="{Binding Scenes.SelectedScene.Play, Converter={StaticResource PlayBackConverter}}"
                                Height="30" />
                            <ItemsControl ItemsSource="{Binding Projectors}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <devices:DeviceItem/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Border>
                </tb:TaskbarIcon.TrayPopup>
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu DataContext="{Binding Path=(tb:TaskbarIcon.ParentTaskbarIcon).Tag, RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Выключить/Включить" />
                        <MenuItem Header="Закрыть" Command="{Binding ElementName=MainWin, Path=ClosedCommand}"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        </Grid>
    </Border>
</Controls:MetroWindow>