<Controls:MetroWindow
    x:Class="CadProjectorViewer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:CadProjectorViewer="clr-namespace:CadProjectorViewer"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Properties="clr-namespace:CadProjectorViewer.Properties"
    xmlns:canvaspanel="clr-namespace:CadProjectorViewer.Panels.CanvasPanel"
    xmlns:configuration="clr-namespace:CadProjectorViewer.Panels.RightPanel.Configuration"
    xmlns:convert="clr-namespace:CadProjectorViewer.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:device="clr-namespace:CadProjectorSDK.Device;assembly=CadProjectorSDK"
    xmlns:devices="clr-namespace:CadProjectorViewer.ViewModel.Devices"
    xmlns:leftpanels="clr-namespace:CadProjectorViewer.Panels.DevicePanel.LeftPanels"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:panels="clr-namespace:CadProjectorViewer.Panels"
    xmlns:rightpanel="clr-namespace:CadProjectorViewer.Panels.RightPanel"
    xmlns:sources="clr-namespace:CadProjectorViewer.Panels.RightPanel.Sources"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:viewmodel="clr-namespace:CadProjectorViewer.ViewModel"
    x:Name="MainWin"
    Title="CUT - Viwer"
    Width="999"
    Height="700"
    MinWidth="700"
    MinHeight="700"
    d:DataContext="{d:DesignInstance Type=viewmodel:AppMainModel}"
    AllowDrop="True"
    Icon="logo.png"
    KeyboardNavigation.TabNavigation="None"
    ResizeMode="CanResizeWithGrip"
    ShowInTaskbar="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Controls:MetroWindow.InputBindings>
        <KeyBinding
            Key="V"
            Command="{Binding PasteCommand}"
            Modifiers="Ctrl" />
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
    </Controls:MetroWindow.InputBindings>
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <Style x:Key="Border" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="DarkGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="CadetBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="GridSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="White" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="CadetBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ObjCanvas" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="DarkGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="CadetBlue" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="{x:Type TabItem}">
                <Setter Property="Controls:HeaderedControlHelper.HeaderFontSize" Value="14" />
            </Style>

            <CadProjectorViewer:PlayBackConverter x:Key="PlayBackConverter" />
            <convert:BoolVisibleConverter x:Key="BoolVisibleConverter" />
            <CadProjectorViewer:MultiObjectList x:Key="MultiList" />
            <CadProjectorViewer:LicenceColor x:Key="LicenceKey" />
            <CadProjectorViewer:GetHubPageConverter x:Key="GetHubPage" />
            <convert:DxCeilParserConverter x:Key="DxCeilParserConverter" />
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Menu>
                <MenuItem Focusable="True" Header="▼">
                    <MenuItem Header="{DynamicResource common_File}">
                        <MenuItem Command="{Binding MakeNewWorkPlaceCommand}" Header="New Workplace" />
                        <MenuItem Command="{Binding LoadMWSCommand}" Header="Browse MWS" />
                        <Separator />
                        <MenuItem Command="{Binding Path=SaveCommand}" Header="{DynamicResource m_Save}" />
                        <MenuItem Command="{Binding SaveAsCommand}" Header="{DynamicResource m_SaveConfigAs}" />
                        <Separator />
                        <MenuItem Command="{Binding SaveSceneCommand}" Header="Save Scene" />
                        <MenuItem Command="{Binding OpenSceneCommand}" Header="Open Scene" />
                        <Separator />
                        <MenuItem Command="{Binding ShowLicenceCommand}" Header="License" />
                        <Separator />
                        <MenuItem Command="{Binding ElementName=MainWin, Path=ClosedCommand}" Header="{DynamicResource common_Close}" />
                    </MenuItem>
                    <MenuItem Header="Services">
                        <MenuItem Command="{Binding RemoveOtherAppCommand}" Header="Remove other process" />
                    </MenuItem>
                    <MenuItem x:Name="menuLanguage" Header="Language" />
                </MenuItem>
            </Menu>
            <Button
                x:Name="MenuSaveBtn"
                Width="25"
                Height="25"
                Margin="2"
                Padding="0,-1,0,0"
                Background="{x:Null}"
                BorderBrush="{x:Null}"
                Command="{Binding SaveCommand}"
                Content="&#xE792;"
                FontFamily="Segoe MDL2 Assets"
                FontSize="18" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Label
                Grid.ColumnSpan="3"
                Margin="3"
                VerticalAlignment="Top"
                HorizontalContentAlignment="Right"
                Content="{Binding cl_moncha_path}"
                FontSize="10"
                MouseDoubleClick="Label_MouseDoubleClick">
                <Label.DataContext>
                    <Properties:Settings />
                </Label.DataContext>
            </Label>
            <Ellipse
                Width="15"
                Height="15"
                Margin="5,0"
                Fill="{Binding ProjectorHub.LockKey, Converter={StaticResource LicenceKey}}">
                <Ellipse.ToolTip>
                    <TextBlock Text="{Binding ProjectorHub.LockKey.DaysLeft, StringFormat={}{0} days}" />
                </Ellipse.ToolTip>
            </Ellipse>

            <Controls:ToggleSwitch
                MinWidth="0"
                Margin="3,0,3,0"
                VerticalAlignment="Center"
                Command="{Binding UDPToggleCommand}"
                IsOn="{Binding ProjectorHub.UDPLaserListener.Status, Mode=OneWay}"
                OffContent="Ethernet"
                OnContent="Listing" />
            <Button
                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                Command="{Binding ShowTCPDialogCommand}"
                Content="&#xE703;"
                FontFamily="Segoe MDL2 Assets" />
            <Button Command="{Binding ElementName=MainWin, Path=HideToTray}" Content="T" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Border>
        <Border.Resources>
            <convert:NotNullBool x:Key="NotNullBool" />
        </Border.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="2*"
                    MinWidth="150"
                    MaxWidth="400" />
                <ColumnDefinition Width="4*" />
                <ColumnDefinition
                    Width="3*"
                    MinWidth="250"
                    MaxWidth="400" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="450*" />
                <RowDefinition
                    Height="140*"
                    MinHeight="140"
                    MaxHeight="300" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <GridSplitter
                Grid.Row="1"
                Grid.RowSpan="2"
                Width="3"
                Margin="0,3"
                HorizontalAlignment="Right"
                Style="{StaticResource GridSplitter}" />

            <DockPanel
                Grid.Row="0"
                Margin="5"
                LastChildFill="True">
                <DockPanel
                    MinWidth="80"
                    Margin="0,0,0,0"
                    DockPanel.Dock="Right">
                    <Button
                        HorizontalAlignment="Stretch"
                        Command="{Binding Path=Clear}"
                        Content="{DynamicResource edit_Clear}"
                        DockPanel.Dock="Top" />
                    <Button
                        x:Name="Line"
                        Command="{Binding Path=LineCommand}"
                        Content="{DynamicResource edit_Line}"
                        DockPanel.Dock="Top" />
                    <Button
                        x:Name="RectBtn"
                        Command="{Binding Path=MaskCommand}"
                        Content="{DynamicResource edit_Mask}"
                        DockPanel.Dock="Top" />
                </DockPanel>
                <Button
                    MinWidth="99"
                    VerticalAlignment="Stretch"
                    Command="{Binding OpenCommand}"
                    Content="{DynamicResource m_Open}"
                    DockPanel.Dock="Left" />
            </DockPanel>

            <TabControl
                x:Name="tabControl1"
                Grid.Row="0"
                Grid.Column="1"
                Margin="0,0,0,0">
                <TabItem FontSize="12" Header="{DynamicResource obj_Transform}">
                    <panels:CadObjectPanel DataContext="{Binding ProjectorHub.ScenesCollection.SelectedScene.SelectedObjects.LastSelectObject}" IsEnabled="{Binding DataContext, Converter={StaticResource NotNullBool}, RelativeSource={RelativeSource Self}}" />
                </TabItem>
            </TabControl>
            <Button
                x:Name="PlayBtn"
                Grid.Row="0"
                Grid.Column="2"
                Margin="5,20,5,0"
                Background="{Binding ProjectorHub.ScenesCollection.SelectedScene.Play, Converter={StaticResource PlayBackConverter}}"
                Command="{Binding Path=PlayCommand}"
                Content="{DynamicResource m_Play}" />

            <TabControl
                Grid.Row="1"
                Grid.RowSpan="2"
                Margin="3,0"
                TabStripPlacement="Left">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Padding" Value="2" />
                    </Style>
                </TabControl.Resources>
                <TabItem Header="{DynamicResource scene_Scene}">
                    <Border Style="{StaticResource Border}">
                        <leftpanels:FrameTree DataContext="{Binding ProjectorHub.ScenesCollection.SelectedScene}" />
                    </Border>
                </TabItem>
                <TabItem Header="{DynamicResource dvc_Devices}" Visibility="{Binding AdminMode, Converter={StaticResource BoolVisibleConverter}}">
                    <Border Style="{StaticResource Border}">
                        <panels:DeviceTreeTab
                            x:Name="DeviceTree"
                            Grid.Row="2"
                            Grid.ColumnSpan="2"
                            Margin="0"
                            DataContext="{Binding ProjectorHub}"
                            Focusable="False" />
                    </Border>
                </TabItem>
            </TabControl>
            <Border
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,3,0,0"
                Style="{StaticResource Border}">
                <canvaspanel:CanvasCollection DataContext="{Binding ProjectorHub.ScenesCollection}" />
            </Border>

            <panels:ScrollPanel
                x:Name="ContourScrollPanel"
                Grid.Row="2"
                Grid.Column="1"
                Margin="0,5,0,0" />

            <TabControl
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="2"
                Margin="5,3,5,0"
                DockPanel.Dock="Right">
                <TabItem FontSize="12" Header="{DynamicResource scene_Scene}">
                    <TabControl>
                        <TabItem Header="{DynamicResource dvc_Device}">
                            <panels:DeviceTab DataContext="{Binding ProjectorHub}" />
                        </TabItem>
                        <TabItem Header="{DynamicResource setting_setting}">
                            <configuration:SceneSetting DataContext="{Binding ProjectorHub.ScenesCollection.SelectedScene}" />
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem FontSize="18" Header="{DynamicResource common_Source}">
                    <Grid Background="#FFE5E5E5">
                        <TabControl x:Name="TabItem">
                            <TabItem Header="DxCeil">
                                <sources:DxCeilParserPanel DataContext="{Binding ProjectorHub.ScenesCollection, Converter={StaticResource DxCeilParserConverter}}" />
                            </TabItem>
                            <TabItem FontSize="14" Header="ILDA">
                                <Grid Background="#FFE5E5E5">
                                    <Controls:ToggleSwitch
                                        x:Name="UsedMeshToggle"
                                        Margin="10,10,0,0"
                                        VerticalAlignment="Top"
                                        Content="Used device mesh"
                                        IsOn="True" />
                                    <Button
                                        x:Name="ILDASaveBtn"
                                        Width="248"
                                        Height="29"
                                        Margin="10,40,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Click="ILDASaveBtn_Click"
                                        Content="{DynamicResource m_Save}" />
                                </Grid>
                            </TabItem>
                            <TabItem Header="Ethernet">
                                <Frame Content="{Binding ., Converter={StaticResource GetHubPage}}" />
                            </TabItem>
                            <TabItem Header="oldUDP">
                                <rightpanel:UdpSetting DataContext="{Binding ProjectorHub.UDPLaserListener}" />
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="{DynamicResource common_Configuration}" Visibility="{Binding AdminMode, Converter={StaticResource BoolVisibleConverter}}">
                    <TabControl>
                        <TabItem FontSize="14" Header="Setting">
                            <configuration:AppDefaultSettingPanel />
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="{DynamicResource common_Workfolder}">
                    <rightpanel:WorkFolderPanel DataContext="{Binding WorkFolder}" />
                </TabItem>
                <TabItem FontSize="12" Header="Log">
                    <rightpanel:LogPanel DataContext="{Binding Logs}" />
                </TabItem>
            </TabControl>

            <panels:ProgressPanel
                Grid.Row="3"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Margin="5"
                MouseDown="ProgressPanel_MouseDown" />
            <Label
                x:Name="pBarLabel"
                Grid.Row="1"
                Grid.Column="2"
                Width="38"
                Height="26"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                Content="Label"
                Visibility="Hidden" />
            <GridSplitter
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="2"
                Width="3"
                Margin="0,3"
                HorizontalAlignment="Left"
                Style="{StaticResource GridSplitter}" />
            <GridSplitter
                Grid.Row="2"
                Grid.Column="1"
                Height="3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Style="{StaticResource GridSplitter}" />

            <tb:TaskbarIcon
                x:Name="ttip"
                Grid.Row="3"
                DoubleClickCommand="{Binding ElementName=MainWin, Path=ShowFromTray}"
                IconSource="logo.ico"
                LeftClickCommand="{Binding ElementName=CanvasCollection, Path=RefreshFrameCommand}"
                ToolTipText="2CUT">
                <!--
                    We can use arbitrary UI elements as Popups.
                    Popups stay open if the user moves away from the tray area
                -->
                <tb:TaskbarIcon.TrayPopup>
                    <Border
                        Background="White"
                        BorderBrush="Orange"
                        BorderThickness="2"
                        CornerRadius="1">
                        <StackPanel>
                            <Button
                                Height="30"
                                Background="{Binding ProjectorHub.ScenesCollection.SelectedScene.Play, Converter={StaticResource PlayBackConverter}}"
                                Command="{Binding Path=PlayAllCommand}"
                                Content="{DynamicResource m_Play}"
                                Visibility="Collapsed" />
                            <ItemsControl ItemsSource="{Binding ProjectorHub.Projectors}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <devices:DeviceItem />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Border>
                </tb:TaskbarIcon.TrayPopup>
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu DataContext="{Binding Path=(tb:TaskbarIcon.ParentTaskbarIcon).Tag, RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Выключить/Включить" />
                        <MenuItem Command="{Binding ElementName=MainWin, Path=ClosedCommand}" Header="Закрыть" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        </Grid>
    </Border>
</Controls:MetroWindow>